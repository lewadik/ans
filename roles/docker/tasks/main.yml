---
# tasks file for docker role

- name: Update package cache (Ubuntu/Debian)
  apt:
    update_cache: yes
    cache_valid_time: 3600
  when: ansible_os_family == "Debian"

- name: Update package cache (CentOS/RHEL)
  yum:
    update_cache: yes
  when: ansible_os_family == "RedHat"

- name: Install required packages for Docker (Ubuntu/Debian)
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
  when: ansible_os_family == "Debian"

- name: Install required packages for Docker (CentOS/RHEL)
  yum:
    name:
      - yum-utils
      - device-mapper-persistent-data
      - lvm2
    state: present
  when: ansible_os_family == "RedHat"

- name: Add Docker GPG key (Ubuntu/Debian)
  apt_key:
    url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
    state: present
  when: ansible_os_family == "Debian"

- name: Add Docker repository (Ubuntu/Debian)
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: present
  when: ansible_os_family == "Debian"

- name: Add Docker repository (CentOS/RHEL)
  yum_repository:
    name: docker-ce
    description: Docker CE Stable - $basearch
    baseurl: https://download.docker.com/linux/centos/7/$basearch/stable
    gpgcheck: yes
    gpgkey: https://download.docker.com/linux/centos/gpg
  when: ansible_os_family == "RedHat"- n
ame: Install Docker CE (Ubuntu/Debian)
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin
    state: present
    update_cache: yes
  when: ansible_os_family == "Debian"
  notify: restart docker

- name: Install Docker CE (CentOS/RHEL)
  yum:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin
    state: present
  when: ansible_os_family == "RedHat"
  notify: restart docker

- name: Add user to docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes
  when: docker_add_user_to_group | default(true)

- name: Start and enable Docker service
  systemd:
    name: docker
    state: started
    enabled: yes

- name: Verify Docker installation
  command: docker --version
  register: docker_version
  changed_when: false

- name: Display Docker version
  debug:
    msg: "Docker installed successfully: {{ docker_version.stdout }}"