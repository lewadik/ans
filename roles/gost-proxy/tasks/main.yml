---
# tasks file for gost-proxy role

- name: Check if gost is already installed
  stat:
    path: "{{ gost_install_path }}/gost"
  register: gost_binary

- name: Download gost binary
  get_url:
    url: "{{ gost_download_url }}"
    dest: "{{ gost_install_path }}/gost"
    mode: '0755'
    owner: root
    group: root
  when: not gost_binary.stat.exists
  become: yes

- name: Make gost executable
  file:
    path: "{{ gost_install_path }}/gost"
    mode: '0755'
    owner: root
    group: root
  become: yes

- name: Create gost service user
  user:
    name: "{{ gost_user }}"
    system: yes
    shell: /bin/false
    home: "{{ gost_home_dir }}"
    create_home: yes
  become: yes

- name: Create gost configuration directory
  file:
    path: "{{ gost_config_dir }}"
    state: directory
    owner: "{{ gost_user }}"
    group: "{{ gost_user }}"
    mode: '0755'
  become: yes

- name: Stop existing gost processes
  shell: |
    pkill -f "gost.*{{ gost_port }}" || true
  become: yes
  ignore_errors: yes

- name: Create gost systemd service file
  template:
    src: gost.service.j2
    dest: /etc/systemd/system/gost.service
    owner: root
    group: root
    mode: '0644'
  become: yes
  notify: restart gost

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes
  become: yes

- name: Start and enable gost service
  systemd:
    name: gost
    state: started
    enabled: yes
  become: yes

- name: Wait for gost service to start
  wait_for:
    port: "{{ gost_port }}"
    host: "{{ gost_bind_address }}"
    delay: 2
    timeout: 30
  ignore_errors: yes

- name: Get public IP address
  uri:
    url: "{{ public_ip_service }}"
    method: GET
    return_content: yes
  register: public_ip_result
  delegate_to: localhost
  run_once: true

- name: Display gost proxy information
  debug:
    msg: |
      GOST Proxy Configuration:
      - Service Status: {{ ansible_facts.services['gost.service'].state if 'gost.service' in ansible_facts.services else 'Unknown' }}
      - Proxy URL: http://{{ gost_username }}:{{ gost_password }}@{{ public_ip_result.content.strip() }}:{{ gost_port }}
      - Local Bind: {{ gost_bind_address }}:{{ gost_port }}
      - Public IP: {{ public_ip_result.content.strip() }}